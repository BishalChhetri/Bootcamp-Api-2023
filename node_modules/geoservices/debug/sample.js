/*
npm install geoservices
...
var Geoservices = require('geoservices');
var client = new Geoservices();

since syntax is different, production sample should be seperated
*/

var featureservice = require('../lib/featureservice');

var params = {
  url: 'http://services.arcgis.com/rOo16HdIMeOBI4Mb/arcgis/rest/services/PDX_Pedestrian_Districts/FeatureServer/0'
};

var myFeatureService = new featureservice.FeatureService(params, function (err, res) {
  if (!err) {
    // console.log(res);
  }
});

var query_params = {
  f: 'json',
  returnGeometry: true,
  where: '1=1',
  outFields: '*',
  outSR: '4326'
  //spatialRel: 'esriSpatialRelIntersects',
  //geometry: '{%22xmin%22:-20037508.342788905,%22ymin%22:-13619533.071360048,%22xmax%22:-0.000004854053258895874,%22ymax%22:6417975.271424003}', //'-104,35.6,-94.32,41',
  //geometry: JSON.stringify({"xmin":-20037508.342788905,"ymin":-13619533.071360048,"xmax":-0.000004854053258895874,"ymax":6417975.271424003}), //'-104,35.6,-94.32,41',
  /*geometry: '-20037508.342788905,-13619533.071360048,-0.000004854053258895874,6417975.271424003', //'-104,35.6,-94.32,41',
  geometryType: 'esriGeometryEnvelope',
  inSR: '102100'*/
};

// myFeatureService.query(query_params, function (err, res) {
//   // returns an array of features that match the search criteria
//   console.log(res);
// });

// myFeatureService.ids(query_params, function (err, res) {
//   // returns an array of ObjectIDs for features that match the search criteria
//   console.log(res);
// });
//
myFeatureService.count(query_params, function (err, res) {
  // returns a single number representing the count of matching features
  console.log(res);
});
